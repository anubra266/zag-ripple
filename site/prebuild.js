#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const DEMOS_DIR = path.join(__dirname, 'src/components/demos');
const OUTPUT_FILE = path.join(__dirname, 'src/components/demos/.generated.ts');

function generateDemosData() {
	try {
		// Check if demos directory exists
		if (!fs.existsSync(DEMOS_DIR)) {
			console.warn('⚠️  Demos directory does not exist:', DEMOS_DIR);
			return;
		}

		// Read all files in the demos directory
		const files = fs.readdirSync(DEMOS_DIR, { withFileTypes: true });

		// Filter for .ripple files
		const rippleFiles = files
			.filter((file) => file.isFile() && file.name.endsWith('.ripple'))
			.map((file) => file.name);

		console.log(`📂 Found ${rippleFiles.length} .ripple files in demos folder`);

		// Generate the data object
		const data = {};

		for (const fileName of rippleFiles) {
			const filePath = path.join(DEMOS_DIR, fileName);
			const fileContent = fs.readFileSync(filePath, 'utf-8');

			// Use filename without extension as key
			const key = path.parse(fileName).name;
			data[key] = fileContent;

			console.log(`✅ Processed: ${fileName} → "${key}"`);
		}

		// Generate TypeScript content
		const tsContent = generateTSContent(data);

		// Write the generated file
		fs.writeFileSync(OUTPUT_FILE, tsContent, 'utf-8');

		console.log(`🎉 Generated: ${OUTPUT_FILE}`);
		console.log(`📊 Total entries: ${Object.keys(data).length}`);
	} catch (error) {
		console.error('❌ Error generating demos data:', error);
		process.exit(1);
	}
}

function generateTSContent(data) {
	const entries = Object.entries(data)
		.map(([key, content]) => {
			// Escape backticks and template literals in content
			const escapedContent = content
				.replace(/\\/g, '\\\\') // Escape backslashes
				.replace(/`/g, '\\`') // Escape backticks
				.replace(/\$\{/g, '\\${'); // Escape template literals

			return `  "${key}": \`${escapedContent}\``;
		})
		.join(',\n');

	return `// This file is auto-generated by prebuild.js
// Do not edit manually - changes will be overwritten

export const demoData = {
${entries}
} as const;

export type DemoKey = keyof typeof demoData;
`;
}

// Run the script
console.log('🚀 Starting demo data generation...');
generateDemosData();

export { generateDemosData };
