import { Button } from "./ui/button.ripple";
import { effect, track } from "ripple";
import { Moon, Sun } from "lucide-ripple";

export component ThemeToggle() {
    let theme = track("dark")

    effect(() => {
        const savedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
            "(prefers-color-scheme: dark)"
        ).matches;
        const initialTheme = savedTheme || (prefersDark ? "dark" : "light");
        @theme = initialTheme
        applyTheme(initialTheme)

        // Listen for system theme changes
        const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
        const handleChange = (e: MediaQueryListEvent) => {
            if (!localStorage.getItem("theme")) {
                const systemTheme = e.matches ? "dark" : "light";
                @theme = systemTheme
                applyTheme(systemTheme)
            }
        };

        mediaQuery.addEventListener("change", handleChange);
        return () => mediaQuery.removeEventListener("change", handleChange);
    })

    function applyTheme(newTheme: "light" | "dark") {
        const root = document.documentElement;
        if (newTheme === "dark") {
            root.classList.add("dark");
        } else {
            root.classList.remove("dark");
        }
    }

    function toggleTheme() {
        const newTheme = @theme === "light" ? "dark" : "light";
        @theme = newTheme
        localStorage.setItem("theme", newTheme)
        applyTheme(newTheme)
    }

    <Button variant="ghost" size="sm" class="w-9 h-9 p-0 transition-colors hover:bg-accent hover:text-white" onClick={toggleTheme} >
        if (@theme === "light") {
            <Sun class="w-4 h-4 transition-transform hover:scale-110" />
        } else {
            <Moon class="w-4 h-4 transition-transform hover:scale-110" />
        }
        <span class="sr-only">
            {"Switch to "}{@theme === "light" ? "dark" : "light"}{" theme"}
        </span>
    </Button>
}