import { effect, track } from "ripple"
import { highlightState } from "@zag-js/stringify-state"

interface StateVisualizerProps {
    state: Service<any>
    label?: string
    omit?: string[]
    context?: any
}

export component StateVisualizer(props: StateVisualizerProps) {
    const { state: service, label, omit, context } = props

    const finalObject = track(() => ({
        state: service.state.get(),
        event: service.event.current(),
        previousEvent: service.event.previous(),
        context: context ? Object.fromEntries(context.map((key) => [key, service.context.get(key)])) : undefined,
      }))

    let highlight = track(() => highlightState(@finalObject, omit) );
 
    const divRef = (node) => {
        node.innerHTML = @highlight.toString();
    };

    <div class="viz">
        <pre dir="ltr">
            <details open>
                <summary>{label || "Visualizer"}</summary>
                <div {ref divRef} />
            </details>
        </pre>
    </div>
}