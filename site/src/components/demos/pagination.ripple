import * as pagination from '@zag-js/pagination';
import { normalizeProps, useMachine } from 'zag-ripple';
import { track } from 'ripple';
import { ChevronLeft, ChevronRight } from 'lucide-ripple';

export component Pagination() {
	let service = useMachine(pagination.machine, {
		id: 'pagination',
		count: 1000,
	});
	let api = track(() => pagination.connect(@service, normalizeProps));

	if (@api.totalPages > 1) {
		let pageIndex = 0;
		<nav {...@api.getRootProps()}>
			<ul role="pagination">
				<li>
					<a href="#previous" {...@api.getPrevTriggerProps()}>
						<ChevronLeft /> <span>{"Previous Page"}</span>
					</a>
				</li>
				for (const page of @api.pages) {
					if (page.type === "page") {
						<li>
							<a href={`#${page.value}`} {...@api.getItemProps(page)}>
								{page.value}
							</a>
						</li>
					} else {
						<li>
							<span {...@api.getEllipsisProps({ index: pageIndex })}>
								{"..."}
							</span>
						</li>
					}
					pageIndex++;
				}
				<li>
					<a href="#next" {...@api.getNextTriggerProps()}>
						<ChevronRight /> <span>{"Next Page"}</span>
					</a>
				</li>
			</ul>
		</nav>
	}
}
