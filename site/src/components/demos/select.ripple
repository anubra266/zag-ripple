import * as select from '@zag-js/select';
import { normalizeProps, useMachine, Portal } from 'zag-ripple';
import { track } from 'ripple';
import { ChevronDown, Check } from 'lucide-ripple';

export component Select() {
	const collection = select.collection({
		items: data,
		itemToValue: (item) => item.value,
		itemToString: (item) => item.label,
	});

	let service = useMachine(select.machine, {
		id: 'select',
		collection,
		placeholder: "Select option",
	});
	let api = track(() => select.connect(@service, normalizeProps));

	<div {...@api.getRootProps()}>
		<label {...@api.getLabelProps()}>{"Label"}</label>
		<div {...@api.getControlProps()}>
			<button {...@api.getTriggerProps()}>
				<span>{@api.valueAsString || "Select option"}</span>
				<ChevronDown />
			</button>
		</div>
		<Portal>
			<div {...@api.getPositionerProps()}>
				<ul {...@api.getContentProps()}>
					for (const item of data) {
						<li {...@api.getItemProps({ item })}>
							<span {...@api.getItemTextProps({ item })}>{item.label}</span>
							<span {...@api.getItemIndicatorProps({ item })}>
								<Check />
							</span>
						</li>
					}
				</ul>
			</div>
		</Portal>
	</div>
}

const data = [
	{ value: 'apple', label: 'Apple' },
	{ value: 'banana', label: 'Banana' },
	{ value: 'cherry', label: 'Cherry' },
	{ value: 'grape', label: 'Grape' },
	{ value: 'orange', label: 'Orange' },
];
