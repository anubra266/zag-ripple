import * as accordion from "@zag-js/accordion";
import { normalizeProps, useMachine } from "zag-ripple";
import { accordionControls, accordionData } from "@zag-js/shared"
import { track, effect } from "ripple";
import { Toolbar } from "./lib/toolbar.ripple";
import { StateVisualizer } from "./lib/state-visualizer.ripple";
import { createControls } from "./lib/create-controls.ripple";

export component Accordion() {
  const controls = createControls(accordionControls)

  // effect(() => {
  //   console.log({props: controls.mergeProps({ id: "accordion" })()}.props)
  // })

  const service = track(() => useMachine(accordion.machine, controls.mergeProps({ id: "accordion" })));
  const api = track(() => accordion.connect(@service, normalizeProps));

  <main class="accordion">
    <div {...@api.getRootProps()}>
      for (const item of accordionData) {
        <div key={item.id} {...@api.getItemProps({ value: item.id })}>
            <h3>
              <button {...@api.getItemTriggerProps({ value: item.id })}>
                {item.label}
                <div {...@api.getItemIndicatorProps({ value: item.id })}>
                  {'â–¶'}
                </div>
              </button>
            </h3>
            <div {...@api.getItemContentProps({ value: item.id })}>
              {'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}
            </div>
          </div>
      }
    </div>
  </main>

  <Toolbar {controls}>
    <StateVisualizer state={@service} />
  </Toolbar>
}